{"version":3,"sources":["logo.svg","components/NavBar.js","pages/PlayListPage.js","components/SongCard.js","pages/HomePage/CardSection.js","pages/HomePage/CurrSongSection.js","pages/HomePage/vis/RectVis.js","pages/HomePage/vis/VisSection.js","pages/HomePage/Controls.js","pages/HomePage/HomePage.js","Footer.js","pages/MyPlayList.js","pages/AboutPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","style","width","Navbar","className","expand","bg","variant","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","backgroundColor","Nav","React","Component","PlayListPage","handleForm","setState","showForm","onUpDateName","val","playListName","onUpdateUrl","imgUrl","state","renderedCovers","this","trending","map","cover","i","key","src","name","renderedPlaylist","playlists","display","onClick","playlistId","addPlaylist","Cover","alt","PlayListForm","url","playlist","songs","length","type","placeholder","value","onChange","e","target","SongCard","setSong","song","Card","clickCard","bind","transition","height","color","CardContent","Typography","wordBreak","textOverflow","title","artist","CardMedia","image","CardSection","cardList","songList","push","renderCanvas","album","preview","Form","inline","FormControl","Button","CurrSongSection","currSong","textAlign","RectVis","context","AudioContext","audio","play","console","log","audioArea","crossOrigin","load","analyser","createAnalyser","canvas","window","innerWidth","innerHeight","ctx","getContext","connect","destination","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","WIDTH","HEIGHT","stateWidth","barWidth","barHeight","x","renderRect","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","r","g","ref","node","controls","VisSection","shape","getRenderFunc","Controls","margin","InputLabel","Select","labelId","event","changeControls","MenuItem","Slider","newValue","HomePage","querySong","newState","func","query","fetch","then","resp","json","data","catch","err","error","Footer","justifyContent","href","MyPlayList","playSong","songInfo","cover_medium","querySongList","onUpdate","showQTable","showQueryTable","selectedTrack","searchSong","match","params","filter","includes","formType","heart","addSong","SearchForm","button","SongTable","row","upperName","toUpperCase","upperArtist","d","TableHeader","cols","header","SongList","heartClick","Music","Audio","togglePlay","pause","addEventListener","removeEventListener","QuerySongList","plusClick","QuerySongTable","AboutPage","class","App","playlistElement","createRef","exact","path","selectSong","render","renderProps","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6010dcf9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport class Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: '100%'}}>\r\n                <Navbar className=\"p-0\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand className=\"px-4 py-2\" as={Link} to=\"/home\">Visualizer</Navbar.Brand>\r\n                    <Navbar.Toggle className=\"mr-2\" aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" style={{backgroundColor: '#343A40'}}>\r\n                        <Nav className=\"mr-auto\">\r\n                        <Nav.Link as={Link} to=\"/home\">Home</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/playlist\">Playlists</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { HashRouter as Router, Route, Link, useParams } from \"react-router-dom\";\r\n\r\nexport default class PlayListPage extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            showForm: false,\r\n            playListName: '',\r\n            imgUrl:''\r\n        }\r\n    }\r\n    \r\n\r\n    handleForm = () => {\r\n        this.setState({showForm: false})\r\n    }\r\n\r\n    onUpDateName = (val) => {\r\n        this.setState({playListName: val})\r\n    }\r\n\r\n    onUpdateUrl = (val) => {\r\n        this.setState({imgUrl: val})\r\n    }\r\n\r\n    render() {\r\n        let renderedCovers = this.props.trending.map((cover, i) => {\r\n            return <Cover key={'trending-'+i} src={cover.cover} id={cover.id} name={cover.name}/>;\r\n        });\r\n        let renderedPlaylist = this.props.playlists.map((cover, i) => {\r\n            return <Cover key={'playlist-' + i}  src={cover.cover} id={cover.id} name={cover.name} />;\r\n        });\r\n\r\n      return (\r\n          <div>\r\n              <Link to={\"/playlist/\" + 0}>\r\n                    <div className=\"top-wrapper\">\r\n                        <div className='card text-center toplist'>\r\n                        <div className=\"card-header\">\r\n                            Your Top Play List\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Time to Chill</h5>\r\n                        </div>\r\n                        <div className=\"card-footer text-muted\">\r\n                            2 days ago\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n              </Link>\r\n              <div id=\"title-playlist\">\r\n                <h1 id=\"mylist\">Your Play List</h1>\r\n                <div id=\"circle\" style={{display: 'inline'}} >\r\n                    <i className=\"fa fa-plus-circle\" onClick={() => this.setState({showForm: true})}></i>\r\n                </div>\r\n              </div>\r\n              <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {renderedPlaylist}\r\n                        {this.state.showForm && <PlayListForm playlistId={this.props.playlistId} addPlaylist={this.props.addPlaylist} handleForm={this.handleForm} \r\n                        onUpDateName={this.onUpDateName} onUpdateUrl={this.onUpdateUrl} playListName={this.state.playListName} imgUrl={this.state.imgUrl}/>}\r\n                    </div>\r\n              </div>\r\n              <div id=\"title-playlist\">\r\n                <h1 id=\"mylist\">Trending</h1>\r\n              </div>\r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    {renderedCovers}\r\n                  </div>\r\n              \r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n    \r\n}\r\n\r\nclass Cover extends Component {\r\n\r\n    render() {\r\n        let src = this.props.src;\r\n        let id = this.props.id;\r\n        let name = this.props.name;\r\n\r\n        return (\r\n            <div className=\"col-md-3 col-sm-6 col-6\">\r\n                <div className=\"card\">\r\n                    <Link to={\"/playlist/\" + id}>\r\n                        <div className=\"overlayer\">\r\n                            <i className=\"fa fa-play-circle\"></i>\r\n                        </div>\r\n                        <img src={src} alt=\"\"></img>\r\n                        \r\n                    </Link>\r\n                </div>\r\n                <Link to={\"/playlist/\" + id}>\r\n                    <div className=\"title\">\r\n                        <p>{name}</p>\r\n                    </div>\r\n                </Link>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass PlayListForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    \r\n\r\n    render() {\r\n        let url = this.props.imgUrl\r\n        let name = this.props.playListName\r\n        let playlist = {\r\n            id: this.props.playlistId,\r\n            cover: \"https://images-na.ssl-images-amazon.com/images/I/919WO8q-nnL._SL1500_.jpg\",\r\n            songs: [],\r\n            name: 'My Playlist'\r\n        }\r\n\r\n        if(url.length != 0) {\r\n            playlist.cover = url\r\n        }\r\n\r\n        if(name.length != 0) {\r\n            playlist.name = name\r\n        }\r\n\r\n        return(\r\n            <div className=\"col-md-3 col-6\">\r\n                <div className=\"name-form form-card\">\r\n                    <div className=\"form-card\">\r\n                        <h5>Create New Playlist</h5>\r\n                        <input type=\"text\" id=\"name\" placeholder=\"My Playlist...\" value={this.props.playListName} onChange={(e) => this.props.onUpDateName(e.target.value)}></input>\r\n                        <input type=\"text\" id=\"url\" placeholder=\"Your image URL...\" value={this.props.imgUrl} onChange={(e) => this.props.onUpdateUrl(e.target.value)}></input>\r\n                    </div>\r\n                    <div className=\"submit\">\r\n                        <button type=\"button\" id=\"submit-button\" onClick={() => {this.props.addPlaylist(playlist); this.props.handleForm()}}>Submit</button>\r\n                        <button type=\"button\" id=\"cancel-button\" onClick={() => this.props.handleForm()}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Card } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nexport class SongCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n   clickCard() {\r\n       this.props.setSong(this.props.song);\r\n    //    this.props.renderCanvas.func();\r\n   }\r\n\r\n    render() {\r\n       return (\r\n            <Card className={'m-2 card'} onClick={this.clickCard.bind(this)} style={{transition: '1s', height: '6rem', width: '20rem', backgroundColor: 'rgba(255, 255, 255, .15)', color: 'white'}}>\r\n                <div className={'d-flex flex-row'}>\r\n                    <CardContent className={'d-flex flex-column'} style={{width: '15rem', height: '100%'}}>\r\n                        <Typography style={{wordBreak: 'normal', textOverflow: 'ellipsis'}}>\r\n                            {this.props.title}\r\n                        </Typography>\r\n                        <Typography>\r\n                            {this.props.artist}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardMedia image={this.props.image} title={this.props.title} style={{height: '100px', width: '100px'}} />\r\n                </div>\r\n            </Card>\r\n       )\r\n    }\r\n}","import React from 'react';\r\nimport { SongCard } from '../../components/SongCard';\r\nimport { Form } from 'react-bootstrap';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport class CardSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let cardList = [];\r\n        for (let i = 0; i < this.props.songList.length; i++) {\r\n            let song = this.props.songList[i];\r\n            cardList.push(<SongCard key={i} song={song} renderCanvas={this.props.renderCanvas} title={song.title} artist={song.artist.name} \r\n                                    image={song.album.cover} preview={song.preview} setSong={this.props.setSong} color={this.props.color} width={this.props.width} />)\r\n        }\r\n        return (\r\n            <div id={'songCardSection'}>\r\n                <div className={'d-inline'}>\r\n                    <Form inline className={'float-right m-3'}>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button variant=\"outline-info\">Search</Button>\r\n                    </Form>\r\n                </div>\r\n                <div id={'songCardList'}>\r\n                    {cardList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class CurrSongSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return(\r\n            <div className={'d-flex justify-content-center m-3'}>\r\n                <div className={'p-4'}>\r\n                    <h3>{this.props.currSong.song.title}</h3>\r\n                    <p style={{textAlign: 'left'}}>{this.props.currSong.song.artist.name}</p>\r\n                </div>\r\n                <div>\r\n                    <img src={this.props.currSong.song.album.cover} alt={this.props.currSong.song.title} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class RectVis extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {context:new AudioContext()}\r\n    }\r\n\r\n    componentWillMount() {\r\n        // this.props.getRenderFunc(this.renderCanvas.bind(this));\r\n    }\r\n    componentDidUpdate() {\r\n      this.renderCanvas();\r\n    }\r\n    play() {\r\n      this.audio.play()\r\n      console.log(\"play\")\r\n    }\r\n    renderCanvas() {\r\n        console.log(\"render canvas\")\r\n        // var audio = document.getElementById(\"audio\");\r\n        // this.state.context.close();\r\n        var audio = this.audioArea;\r\n        audio.crossOrigin = \"anonymous\";\r\n        audio.src = this.props.currSong.song.preview;\r\n    \r\n        audio.load();\r\n        audio.play();\r\n        // var context = new AudioContext();\r\n        // context.close()\r\n        // context.src ? context.src : context.createMediaElementSource(audio);\r\n        // var src = this.state.context.createMediaElementSource(audio);\r\n        var analyser = this.state.context.createAnalyser();\r\n    \r\n        // var canvas = document.getElementById(\"canvas\");\r\n        this.canvas.width = window.innerWidth;\r\n        this.canvas.height = window.innerHeight;\r\n        var ctx = this.canvas.getContext(\"2d\");\r\n    \r\n        // this.state.src.connect(analyser);\r\n        analyser.connect(this.state.context.destination);\r\n    \r\n        analyser.fftSize = 256;\r\n    \r\n        var bufferLength = analyser.frequencyBinCount;\r\n    \r\n        var dataArray = new Uint8Array(bufferLength);\r\n\r\n        var WIDTH = this.canvas.width;\r\n        var HEIGHT = this.canvas.height;\r\n        \r\n        let color = this.props.color;\r\n        let stateWidth = this.props.width;\r\n        function renderRect() {\r\n          // console.log(color)\r\n          // console.log(stateWidth)\r\n          requestAnimationFrame(renderRect);\r\n          x = 0;\r\n        \r\n          analyser.getByteTimeDomainData(dataArray);\r\n          // analyser.getByteFrequencyData(dataArray);\r\n\r\n          console.log(dataArray);\r\n          ctx.fillStyle = \"#000\";\r\n          ctx.fillRect(0, 0, WIDTH, HEIGHT);\r\n          for (var i = 0; i < bufferLength; i++) {\r\n            // console.log(\"buffer\", dataArray[i])\r\n            barHeight = dataArray[i] * 2;\r\n            // console.log(\"bar height\", barHeight)\r\n    \r\n            var r = barHeight + (25 * (i / bufferLength));\r\n            var g = 250 * (i / bufferLength);\r\n            var b = 50;\r\n    \r\n            if (color == \"Default\" || color == \"\") {\r\n              ctx.fillStyle = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n            } else { // if (state.color != \"\") {\r\n              ctx.fillStyle = color;\r\n            }\r\n            // console.log(barHeight);\r\n            ctx.fillRect(x, HEIGHT - barHeight, barWidth * stateWidth, barHeight);\r\n            // ctx.fillRect(10, 10, 100,100);\r\n    \r\n            x += barWidth * stateWidth + 1;\r\n          }\r\n        }\r\n    \r\n        // audio.play();\r\n        // if (this.props.shape == \"Square\") {\r\n    \r\n        // } else if (state.shape == \"Circle\") {\r\n        //   console.log(\"state = circle\");\r\n        //   renderCircle();\r\n        // } else if (state.shape == \"Triangle\") {\r\n          \r\n        // } else if (state.shape == \"Rectangle\") {\r\n          console.log(\"state = Rectangle\");\r\n          var barWidth = 20;\r\n          var barHeight = 20;\r\n          var x = 0;     \r\n          renderRect();\r\n        // } \r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={'d-flex flex-column justify-content-center align-items-center'}>\r\n                <canvas ref={(node) => { this.canvas = node; }} id=\"canvas\"></canvas>\r\n                <audio onClick = {this.play} id=\"audio\" ref={(node) => { this.audioArea = node; }} controls style={{width: '100%'}} className=\"my-3\"></audio>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { RectVis } from './RectVis';\r\n\r\nexport class VisSection extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.shape == \"Circle\") {\r\n            \r\n        } else {\r\n            return (\r\n                <div>\r\n                    <RectVis width={this.props.width} color={this.props.color} currSong={this.props.currSong} getRenderFunc={this.props.getRenderFunc} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport class Controls extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'d-flex'}>\r\n                <FormControl variant=\"filled\" style={{width: '5rem', margin: '1.5rem'}}>\r\n                    <InputLabel id=\"demo-simple-select-filled-label\">Color</InputLabel>\r\n                    <Select\r\n                    labelId=\"demo-simple-select-filled-label\"\r\n                    id=\"demo-simple-select-filled\"\r\n                    value={this.props.color}\r\n                    onChange={(event) => {this.props.changeControls('color', event.target.value)}}\r\n                    >\r\n                        <MenuItem value=\"\">Default</MenuItem>\r\n                        <MenuItem value={'Red'}>Red</MenuItem>\r\n                        <MenuItem value={'Orange'}>Orange</MenuItem>\r\n                        <MenuItem value={'Yellow'}>Yellow</MenuItem>\r\n                        <MenuItem value={'Green'}>Green</MenuItem>\r\n                        <MenuItem value={'Blue'}>Blue</MenuItem>\r\n                        <MenuItem value={'Purple'}>Purple</MenuItem>\r\n                        <MenuItem value={'Pink'}>Pink</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <div className={'d-flex flex-column align-content-center'}>\r\n                    <Typography>Width</Typography>\r\n                    <Slider style={{width: '15rem'}} onChange={(event, newValue) => {this.props.changeControls('width', newValue)}} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} ","import React from 'react';\r\nimport { CardSection } from './CardSection';\r\nimport { CurrSongSection } from './CurrSongSection';\r\nimport { RectVis } from './vis/RectVis'\r\nimport { VisSection } from './vis/VisSection';\r\nimport { Controls } from './Controls';\r\n\r\nexport class HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: \"red\",\r\n            shape: \"Rectangle\",\r\n            width: 1,\r\n            songList: [],\r\n            renderCanvas: \"\"\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.querySong(\"get your wish\");\r\n    }\r\n\r\n    changeControls(key, val) {\r\n        let newState = {};\r\n        newState[key] = val;\r\n        console.log(newState)\r\n        this.setState(newState);\r\n    }\r\n\r\n    getRenderFunc(func) {\r\n        this.setState({renderCanvas: {func}})\r\n    }\r\n\r\n    querySong(query) {\r\n        // let baseUrl = 'https://cors-anywhere.herokuapp.com/https://api.deezer.com/search?q='\r\n        let songSearch = fetch('https://polar-falls-56753.herokuapp.com/?search=' +query)\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({songList: data.data});\r\n            // this.props.setSong(data.data[0])\r\n        }).catch(err => console.error(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CardSection songList={this.state.songList} setSong={this.props.setSong} renderCanvas={this.state.renderCanvas} \r\n                            color={this.state.color} width={this.state.width} />\r\n                <div id={'currSong'}>\r\n                    <CurrSongSection currSong={this.props.currSong} setSong={this.props.setSong}/>\r\n                </div>\r\n                <div id={'canvasContainer'}>\r\n                    {/* <RectVis width={this.state.width} color={this.state.color} song={this.props.currSong} /> */}\r\n                    <VisSection width={this.state.width} color={this.state.color} currSong={this.props.currSong} />\r\n                </div>\r\n                <div>\r\n                    <Controls changeControls={this.changeControls.bind(this)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport class Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'footer'}>\r\n                <Typography className={'pt-3'} style={{color: 'white'}}>Contact Us:</Typography>\r\n                <div style={{display: 'flex', justifyContent: \"space-around\"}}>\r\n                    <div>\r\n                        <h6 className={'mb-0'}>Alex Wong:</h6>\r\n                        <a href=\"mailto: alwong34@uw.edu\">\r\n                            <p className={'mb-1'}>alwong34@uw.edu</p>\r\n                        </a>\r\n                    </div>\r\n                    <div>\r\n                        <h6 className={'mb-0'}>Gavin Sreesangkom:</h6>\r\n                        <a href=\"mailto: sreesg@uw.edu\">\r\n                            <p className={'mb-1'}>sreesg@uw.edu</p>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\n\r\nexport default class MyPlayList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTrack: null,\r\n            searchSong: '',\r\n            querySong: '',\r\n            querySongList: [],\r\n            showQueryTable: false\r\n        };\r\n    }\r\n    \r\n    playSong = (preview) => {\r\n        this.setState({src: preview});\r\n    }\r\n\r\n    querySong = (query) => {\r\n        // let baseUrl = 'https://cors-anywhere.herokuapp.com/https://api.deezer.com/search?q='\r\n        let songSearch = fetch('https://polar-falls-56753.herokuapp.com/?search=' + query)\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            let songList = [];\r\n            let length = data.data.length;\r\n            if (length > 10) {\r\n                length = 10;\r\n            }\r\n            for (let i = 0; i < length; i++) {\r\n                let songInfo = {};\r\n                songInfo.name = data.data[i].title;\r\n                songInfo.artist = data.data[i].artist.name;\r\n                songInfo.preview = data.data[i].preview;\r\n                songInfo.cover = data.data[i].album.cover_medium;\r\n                console.log(data.data[i])\r\n                songList.push(songInfo);\r\n            }\r\n            this.setState({querySongList: songList});\r\n        }).catch(err => console.error(err));\r\n    }\r\n\r\n    onUpdate = (val) => {\r\n        this.setState({\r\n          querySong: val\r\n        })\r\n      };\r\n\r\n    showQTable = () => {\r\n        this.setState({\r\n            showQueryTable: !this.state.showQueryTable\r\n        })\r\n    };\r\n\r\n    \r\n\r\n    \r\n    \r\n    render() {\r\n        let id = this.props.match.params.playlistId;\r\n        let playlist = this.props.playlists.filter((playlist) => playlist.id == id)[0];\r\n        \r\n        if (id.includes('trending')) {\r\n            playlist = this.props.trending.filter((playlist) => playlist.id == id)[0];\r\n        }\r\n\r\n        // console.log('using thisssss:', playlist)\r\n\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <Cover playlist={playlist}/>\r\n                    <SearchForm value={this.state.querySong} showQTable={this.showQTable} query={this.querySong} querySong={this.state.querySong} onUpdate={this.onUpdate} formType={'add-song'}/>\r\n                    {!this.state.showQueryTable && <SearchForm value={this.state.searchSong}  searchSong={this.state.searchSong} onUpdate={(val) => {this.setState({searchSong:val})} }/>}\r\n                    {!this.state.showQueryTable && <SongTable heart={this.state.heart} playlist={playlist} playSong={this.playSong} searchSong={this.state.searchSong}/>}\r\n                    {this.state.showQueryTable && <QuerySongTable showQTable={this.showQTable} id={id} querySong={this.state.querySongList} playSong={this.playSong} addSong={this.props.addSong}/>}\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n            \r\n    }\r\n}\r\n\r\nexport class Cover extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"playlist-cover\">\r\n                    <img src={this.props.playlist.cover}></img>\r\n                    <div>\r\n                        <h2>{this.props.playlist.name}</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class SearchForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        let button;\r\n        let placeholder = 'Search songs...'\r\n        if(this.props.formType == 'add-song') {\r\n            button = <button type=\"button\" onClick={() => {this.props.query(this.props.querySong); this.props.showQTable( )}}  className=\"btn-playlist btn btn-outline-info\" value='Update'>Search</button>\r\n            placeholder = 'Songs to add...'\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <div className={this.props.formType == 'add-song' ? \"add-song\" : \"search-song\"}>\r\n                    <form className={this.props.formType == 'add-song' ? \"my-list m-3 form-inline\": \"m-3 form-inline\"}>\r\n                        <input placeholder={placeholder} type=\"text\" value={this.props.querySong} onChange={e => this.props.onUpdate(e.target.value)} className=\"mr-sm-2 form-control\"></input>\r\n                        {button}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport class SongTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    \r\n\r\n    render() {\r\n        let filtered = this.props.playlist.songs.filter((e) => {\r\n            if(this.props.searchSong.length == 0) {\r\n                return true\r\n            }\r\n            let upperName = e.name.toUpperCase();\r\n            let upperArtist = e.artist.toUpperCase();\r\n\r\n            return (upperName.includes(this.props.searchSong.toUpperCase()) || upperArtist.includes(this.props.searchSong.toUpperCase()))\r\n        })\r\n\r\n        let row = filtered.map((d,i) => {\r\n            return (\r\n                <SongList heart={this.props.heart} key={i} song={d} playSong={this.props.playSong}/>\r\n            )\r\n          });\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"wrapper-tbl\">\r\n                    <div className=\"m2\">\r\n                        <table className=\"song-table\">\r\n                            <TableHeader/>\r\n                            <tbody>\r\n                                {row}\r\n                            </tbody>\r\n                            \r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport class TableHeader extends Component {\r\n    render() {\r\n        let headers = ['Cover', 'Song', 'Artist', '', '']\r\n      let cols = headers.map((header, i)=>{\r\n        let compnent = <th key={\"header-\"+i}>{header}</th>;\r\n        return(compnent);\r\n      })\r\n      \r\n      return (\r\n        <thead>\r\n          <tr className=\"song-table\">\r\n            {cols}\r\n          </tr>\r\n        </thead>\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n  export class SongList extends Component {\r\n    state = {\r\n        heart: false\r\n    }\r\n    heartClick = () => {\r\n        this.setState({ heart: !this.state.heart })\r\n    }\r\n    render() {\r\n      return (\r\n        <tr className='song-table'>\r\n            <td><img className=\"album\" src={this.props.song.cover}/></td>\r\n            <td>{this.props.song.name}</td>\r\n            <td>{this.props.song.artist}</td>\r\n            <td><i onClick={()=> this.heartClick()} className=\"fa fa-heart fa-2x\" style={this.state.heart ? {color:'palevioletred'}:{color:'white'}}></i></td>\r\n            <td><Music url={this.props.song.preview}/></td>\r\n        </tr>\r\n      )\r\n    }\r\n  }\r\n\r\n  export class Music extends React.Component {\r\n    state = {\r\n      play: false\r\n    }\r\n    audio = new Audio(this.props.url)\r\n  \r\n    componentDidMount() {\r\n      this.audio.addEventListener('ended', () => this.setState({ play: false }));\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      this.audio.removeEventListener('ended', () => this.setState({ play: false }));  \r\n    }\r\n  \r\n    togglePlay = () => {\r\n      this.setState({ play: !this.state.play }, () => {\r\n        this.state.play ? this.audio.play() : this.audio.pause();\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <i className={this.state.play ? \"fa fa-pause-circle fa-3x\" : \"fa fa-play-circle fa-3x\"} onClick={this.togglePlay}></i>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  export class QuerySongList extends Component {\r\n\r\n    state = {\r\n        color: true\r\n    }\r\n    plusClick = () => {\r\n        this.setState({ heart: !this.state.heart })\r\n    }\r\n\r\n    render() {\r\n        // Push the 'song' prop up when click plus circle\r\n      return (\r\n        <tr className='song-table'>\r\n            <td><img className=\"album\" src={this.props.song.cover}/></td>\r\n            <td>{this.props.song.name}</td>\r\n            <td>{this.props.song.artist}</td>\r\n            <td><Music url={this.props.song.preview}/></td>\r\n            <td><i onClick={()=> {this.props.addSong(this.props.song, this.props.id); this.plusClick()}} style={this.state.heart ? {color:'palevioletred'}:{color:'white'}} className=\"fa fa-plus-circle fa-3x\"></i></td>\r\n        </tr>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  export class QuerySongTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    \r\n\r\n    render() {\r\n        let row = this.props.querySong.map((d,i) => {\r\n            return (\r\n                <QuerySongList id={this.props.id} playlist={this.props.playlist} addSong={this.props.addSong} key={i} song={d} playSong={this.props.playSong}/>\r\n            )\r\n          });\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"wrapper-tbl\">\r\n                    <div className=\"m2\">\r\n                    <button type=\"button\" onClick={() => {this.props.showQTable()}}  className=\"btn-playlist btn btn-outline-info\" value='Update'>Back to Playlist</button>\r\n                        <table className=\"song-table\">\r\n                            <TableHeader/>\r\n                            <tbody>\r\n                                {row}\r\n                            </tbody>\r\n                            \r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n  ","import React, {Component} from 'react';\r\n\r\nexport default class AboutPage extends Component {\r\n    render() {\r\n        return(\r\n        <main className=\"about-page\">\r\n\r\n            <div id=\"heading\" class=\"parallax1\">\r\n                <h1>Project: Music Viz</h1>\r\n            </div>\r\n            <div class=\"parallax1\">\r\n\r\n\r\n            <section>\r\n                <ol>\r\n                    <li class=\"h3\">\r\n                        <h3>Overview</h3>\r\n                        <p class=\"h6\">For our general topic, we want to do something related to music and how people\r\n                            learn about music. We are both musicians and like to listen to a lot of music,\r\n                            so we thought that this topic would be interesting and allow us to be somewhat\r\n                            creative with our project. It is important that people continue making music\r\n                            and artists can share their songs. There are plenty of platforms for people to\r\n                            share music, but there are less about learning and understanding how music\r\n                            works and how it is structured. We think that this problem space will allow\r\n                            people to obtain a better understanding and help make their listening and\r\n                            learning experiences better.\r\n                        </p>\r\n                    </li>\r\n                    <li class=\"h3\">\r\n                        <h3>Justification</h3>\r\n                        <p class=\"h6\">\r\n                            Music is a big part of people’s life. It is a form of recreation and remedy to\r\n                            many. Billions of music is being streamed everyday, and because of this, we\r\n                            want to create some applications that will help enhance the overall experience\r\n                            of listening to music. Furthermore, the music is not just about listening but\r\n                            also learning and playing as a form of social gathering and personal hobbies.\r\n                            Because of this, we want to better both aspects of music, learning and\r\n                            listening, in our project.\r\n                        </p>\r\n                    </li>\r\n                </ol>\r\n            </section>\r\n            </div>\r\n            <div class=\"parallax2\">\r\n            <section>\r\n                <h2>Potential Web Applications</h2>\r\n                <ul>\r\n                    <li>\r\n                        <h3>Music Visualizer</h3>\r\n                        <p>\r\n                            Our first idea is an interactive music visualizer. Through this web app a user\r\n                            could choose a song and see how a computer analyzes the different pitches and\r\n                            waves. This is often how people make beats and mixes of songs, and\r\n                            visualizations can help people understand the different parts of a track.\r\n                            Users would be able to take away certain parts of a song like the bass or\r\n                            the vocals and see how the song changes in both sound and visual pattern.\r\n                            This would teach them how certain parts of a song are put together and\r\n                            what role each part plays. Users would also be able to choose how the\r\n                            visualization looks. This would include options like colors and shapes of\r\n                            the graph.\r\n                        </p>\r\n                        <h4>Questions our app could answer</h4>\r\n                        <ul>\r\n                            <li>What visualization can go with my song?</li>\r\n                            <li>How does the music change when I take away a certain part?</li>\r\n                            <li>What is the loudest part of my song?</li>\r\n                        </ul>\r\n                        <a href=\"https://www.renderforest.com/music-visualisations\">Render Forest</a>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Chord Search</h3>\r\n                        <p>\r\n                            Our second idea is a chord search. The goal of this web app is to educate and\r\n                            enhance offers people who like to play instruments (especially guitar and piano)\r\n                            to find and explore songs that they can play by looking at their skill level.\r\n                            This web app will allow users to input/select the chords that they know\r\n                            (preferably guitar/piano) and then the website will output the songs that is\r\n                            playable with the chords that they are able to play. A lot of people, when\r\n                            trying to learn music would like to play something to keep the motivation and\r\n                            fun in learning. And most of the time they don’t know any songs that they can\r\n                            play with the chords that they know so resorting to playing and rehearsing the\r\n                            same old group of songs. With this, we can give them more options to choose\r\n                            from and also encourage them to learn 1 or 2 more chords to unlock more songs\r\n                            that they can play as a result. The web app will have display of chords shape\r\n                            and keys for users to search. We can also add filtering based on capo -\r\n                            tuning required to make it easier for users to find songs based on the tools\r\n                            that they have available.\r\n                        </p>\r\n                        <h4>Questions our app could answer</h4>\r\n                        <ul>\r\n                            <li>What are the songs that I can play according to the skill level that I have?</li>\r\n                            <li>What are the chords that I should learn to increase my playability?</li>\r\n                            <li>How do I play 'this' chord? What is the tab/info of the chord?</li>\r\n                        </ul>\r\n                        <a href=\"https://www.ultimate-guitar.com/ \">Utlimate Guitar</a>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Playlist Ranking</h3>\r\n                        <p>\r\n                            The third idea is a web application that allows users to create and share\r\n                            their playlists, with other people. Users can search up songs that they would\r\n                            want in their playlist and create them freely. Then they can choose to send\r\n                            it to friends or submit it in a group to be ranked. The ranked playlist will\r\n                            be displayed on the website, depending on the group (private/public) the\r\n                            users will see their own playlist rank and where it stands on the leaderboard.\r\n                            Users would also be able to rank songs within playlists, and the order of the\r\n                            playlist could be sorted with the top ranking songs on top.\r\n                        </p>\r\n                        <h4>Questions our app could answer</h4>\r\n                        <ul>\r\n                            <li>What is the most popular playlist?</li>\r\n                            <li>Where can I find more playlist?</li>\r\n                            <li>How can I create a playlist and share it with others?</li>\r\n                            <li>How popular will my plalist be?</li>\r\n                        </ul>\r\n                    </li>\r\n                    </ul>\r\n                    </section>\r\n                    </div>\r\n    </main>\r\n\r\n                    \r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Navigation } from './components/NavBar';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport { Switch } from 'react-router-dom';\r\nimport PlayListPage from './pages/PlayListPage';\r\nimport { HomePage } from './pages/HomePage/HomePage';\r\nimport { Footer } from './Footer';\r\nimport MyPlayList from './pages/MyPlayList';\r\nimport AboutPage from './pages/AboutPage';\r\n\r\n\r\n\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currSong: {\r\n        song: {\r\n          title: \"\",\r\n          artist: {name: \"\"},\r\n          album: {cover: \"\"},\r\n          preview: \"\"\r\n        }\r\n      },\r\n      trending: [\r\n        {\r\n            id: 'trending'+ 0,\r\n            cover: \"https://pbs.twimg.com/profile_images/1222571834488623104/zsWD1O8K_400x400.jpg\",\r\n            songs: [\r\n              {name:'Good things', artist:'Gavin Koman', preview:'https://cdns-preview-8.dzcdn.net/stream/c-81af51bb89fd01fa5c65470b6b38597e-4.mp3', cover: ''}, \r\n              {name:'In the Midst', artist:'Tom Misch', preview: 'https://cdns-preview-3.dzcdn.net/stream/c-3b6d163c64ce90ddf249f755a7608f1b-2.mp3', cover: ''}\r\n            ],\r\n            name: 'Trending 1'\r\n        },\r\n        {\r\n            id: 'trending'+ 1,\r\n            cover: \"https://pbs.twimg.com/profile_images/1222571834488623104/zsWD1O8K_400x400.jpg\",\r\n            songs: [\r\n              {name:'Good things', artist:'Gavin Koman', preview:'https://cdns-preview-8.dzcdn.net/stream/c-81af51bb89fd01fa5c65470b6b38597e-4.mp3', cover: ''}, \r\n              {name:'In the Midst', artist:'Tom Misch', preview: 'https://cdns-preview-3.dzcdn.net/stream/c-3b6d163c64ce90ddf249f755a7608f1b-2.mp3', cover: ''}\r\n            ],\r\n            name: 'Trending 2'\r\n        },\r\n        {\r\n            id:'trending'+ 2,\r\n            cover: \"https://pbs.twimg.com/profile_images/1222571834488623104/zsWD1O8K_400x400.jpg\",\r\n            songs: [\r\n              {name:'Good things', artist:'Gavin Koman', preview:'https://cdns-preview-8.dzcdn.net/stream/c-81af51bb89fd01fa5c65470b6b38597e-4.mp3', cover: ''}, \r\n              {name:'In the Midst', artist:'Tom Misch', preview: 'https://cdns-preview-3.dzcdn.net/stream/c-3b6d163c64ce90ddf249f755a7608f1b-2.mp3', cover: ''}\r\n            ],\r\n            name: 'Trending 3'\r\n        },\r\n        {\r\n            id: 'trending'+ 3,\r\n            cover: \"https://pbs.twimg.com/profile_images/1222571834488623104/zsWD1O8K_400x400.jpg\",\r\n            songs: [\r\n              {name:'Good things', artist:'Gavin Koman', preview:'https://cdns-preview-8.dzcdn.net/stream/c-81af51bb89fd01fa5c65470b6b38597e-4.mp3', cover: ''}, \r\n              {name:'In the Midst', artist:'Tom Misch', preview: 'https://cdns-preview-3.dzcdn.net/stream/c-3b6d163c64ce90ddf249f755a7608f1b-2.mp3', cover: ''}\r\n            ],\r\n            name: 'Trending 4'\r\n        }\r\n    ],\r\n    playlists: [\r\n        {\r\n            id: 0,\r\n            cover: \"https://pbs.twimg.com/profile_images/1222571834488623104/zsWD1O8K_400x400.jpg\",\r\n            songs: [\r\n              {name:'Good things', artist:'Gavin Koman', preview:'https://cdns-preview-8.dzcdn.net/stream/c-81af51bb89fd01fa5c65470b6b38597e-4.mp3', cover: ''}, \r\n              {name:'In the Midst', artist:'Tom Misch', preview: 'https://cdns-preview-3.dzcdn.net/stream/c-3b6d163c64ce90ddf249f755a7608f1b-2.mp3', cover: ''}],\r\n            name: \"Time to Chill\"\r\n        }\r\n    ]\r\n    }\r\n\r\n    this.playlistElement = React.createRef();\r\n  }\r\n\r\n  addPlaylist = (playlist) => {\r\n    let playlists = this.state.playlists;\r\n    let playlistId = this.state.playlistId\r\n    // console.log(playlists)\r\n\r\n    playlists.push(playlist);\r\n    // console.log(playlist)\r\n    this.setState({\r\n      playlists: playlists,\r\n      playlistId: playlistId + 1\r\n    })\r\n    \r\n    console.log(playlists)\r\n  }\r\n\r\n  addSong = (song, id) => {\r\n    // console.log(playlist)\r\n    let playlists = this.state.playlists;\r\n    console.log(id)\r\n    let playlist = playlists[id]\r\n    console.log('hellll',playlist)\r\n    playlist.songs.push(song)\r\n  }\r\n\r\n\r\n  selectSong(song) {\r\n    this.setState({currSong: {song}})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n      <div className=\"App\">\r\n        <header>\r\n          <Navigation />\r\n        </header>\r\n        <main className={'mb-5'}>\r\n            <Switch>\r\n              <Route exact path='/'>\r\n                <HomePage currSong={this.state.currSong} setSong={this.selectSong.bind(this)}/>\r\n              </Route>\r\n              <Route exact path='/home'>\r\n                <HomePage currSong={this.state.currSong} setSong={this.selectSong.bind(this)}/>\r\n              </Route>\r\n              <Route exact path='/playlist' render={() => <PlayListPage playlistId={this.state.playlistId} ref={this.playlistElement} playlists={this.state.playlists} addPlaylist={this.addPlaylist} \r\n              trending={this.state.trending} />} />\r\n              <Route path='/playlist/:playlistId' render={(renderProps) => <MyPlayList addSong={this.addSong} playlists={this.state.playlists} {...renderProps} trending={this.state.trending} />}/>\r\n              <Route exact path='/about'>\r\n                <AboutPage/>\r\n              </Route>\r\n            </Switch>\r\n        </main>\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}